image: Visual Studio 2022


environment:
  pack_params: -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -p:PublishRepositoryUrl=true -p:EmbedUntrackedSources=true --output output -p:Configuration=Release -p:ContinuousIntegrationBuild=true
  DOCKER_USER: mvrens
  DOCKER_PASS:
    secure: OzXCaIRFu2JkvLlPAeHHM01yrDeFKQys3oZAeYe3q4Fp8Uqa4XTz/kCnq8fz9ceW

platform:
  - Any CPU

configuration:
  - Release


install:
  - choco install gitversion.portable -pre -y

before_build:
  - gitversion /l console /output buildserver
  - nuget restore

build:
  project: CodeSniffer.sln

after_build:
  # Build frontend
  - ps: |
        Push-Location frontend

        yarn install
        yarn build

        Pop-Location

  # Create NuGet packages
  - dotnet pack CodeSniffer.Core\CodeSniffer.Core.csproj %pack_params% -p:Version=%GitVersion_NuGetVersion%

  # Push artifacts
  - ps: |
        Get-ChildItem output\*.nupkg | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
        Get-ChildItem output\*.snupkg | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }

  # Build and push Docker image
  - ps: |
        Copy-Item -Path "frontend" -Destination "CodeSniffer\bin\Release\net6.0\" -Recurse

        Push-Location "CodeSniffer\bin\Release\net6.0\"

        $branchTag = $env:GitVersion_BranchName
        if ($branchTag -eq "master")
        {
          $branchTag = "latest"
        }

        docker build -t mvrens/codesniffer:$env:GitVersion_NuGetVersion -t mvrens/codesniffer:$branchTag .

        Write-Output $env:DOCKER_PASS | docker login -u="$env:DOCKER_USER" --password-stdin
        docker push mvrens/codesniffer:$env:GitVersion_NuGetVersion
        docker push mvrens/codesniffer:$branchTag
        docker logout

        Pop-Location

deploy:
  - provider: NuGet
    api_key:
      secure: Bl47U4FsBedTdYMisLIrrm8vOUlnnJa6dcRwk8rfFb8hIn38R6PrMc8D+zltoR9n

    skip_symbols: false
    artifact: /.*(\.|\.s)nupkg/